plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group 'au.com.dmg.fusion'
version '1.0.0'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

compileJava{
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    testImplementation 'junit:junit:4.+'
    api "com.squareup.moshi:moshi:1.12.0"
    api 'org.jsoup:jsoup:1.14.2'
//    api 'com.squareup.moshi:moshi-adapters:1.12.0'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'fusion-sdk'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Fusion SDK for Satellite'
                description = 'SDK to allow for sending requests to Datameshgroup terminals.'
                url = ''
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'datameshgroup'
                        name = 'Datamesh Group'
                        email = 'admin@datameshgroup.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
}

test {
    useJUnit()
}